<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="personalClient" class="onion.open.spring.ioc.PersonalClient"/>
	<bean id="coorperationClient" class="onion.open.spring.ioc.CoorperationClient"/>
	<bean id="clientManager" class="onion.open.spring.ioc.ClientManager">
		<!-- 构造函数注入 -->
		<constructor-arg ref="personalClient"/>
		<!-- setter 属性注入 -->
		<property name="client2" ref="coorperationClient"></property>
	</bean>
	
	<!-- for H2 database -->
   <bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool" destroy-method="dispose">
   	<constructor-arg>
    		<bean class="org.h2.jdbcx.JdbcDataSource">
	        <!-- 内存模式 -->
	        <property name="URL" value="jdbc:h2:~/onion" />
	        <property name="user" value="sa" />
	        <property name="password" value="sa" />
        </bean>
  	</constructor-arg>
   </bean>
   
	<!-- JdbcTemplate 支持最简单的JDBC数据库访问及简单的索引参数查询-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean> 
	<bean id="userJdbcDAO" class="onion.open.spring.db.UserJdbcDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>  
	
	<!-- SimpleJdbcTemplate 更常用，该模板类利用Java5以后的一些特性，如自动装箱、泛型以及可变参数列表来简化JDBC模板的使用  -->
	<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean> 		
	<bean id="roleJdbcDAO" class="onion.open.spring.db.RoleJdbcDAO">
		<property name="jdbcTemplate" ref="simpleJdbcTemplate"/>
	</bean> 
</beans>
